package main

import "text/template"

// EnumConversionGoTemplate generates Go helper functions for enum string conversion
var EnumConversionGoTemplate = template.Must(template.New("fix.enum.conversion.go").Funcs(templateFuncs).Parse(`// Code generated by generate-pb. DO NOT EDIT.
// This file contains helper functions for converting between protobuf enums and FIX string values.

package {{extractPackageName .GoPackagePrefix}}

import "{{.QuickfixRoot}}/enum"

{{range getAllEnumDefinitions}}
{{.GenerateEnumStringMapping}}{{end}}
`))

// MessageConversionGoTemplate generates conversion functions from FIX messages to protobuf messages
var MessageConversionGoTemplate = template.Must(template.New("fix.message.conversion.go").Funcs(templateFuncs).Parse(`// Code generated by generate-pb. DO NOT EDIT.
// This file contains conversion functions from FIX messages to protobuf messages.

package {{extractPackageName .GoPackagePrefix}}

import (
	"fmt"
{{- range .Packages}}
	"{{.}}"
{{- end}}
)

{{range .GetNonComponentMessages}}
// {{.Name}}FromFIX converts a FIX {{.Name}} message to protobuf {{.Name}}
func {{.Name}}FromFIX(fixMsg {{.FIXType}}) (*{{.Name}}, error) {
	pbMsg := &{{.Name}}{}
{{- range .GetFields}}
{{.ConvertCodes}}
{{- end}}
	return pbMsg, nil
}

{{end}}
`))
