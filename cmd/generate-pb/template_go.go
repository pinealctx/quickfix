package main

import "text/template"

// EnumConversionGoTemplate generates Go helper functions for enum string conversion
var EnumConversionGoTemplate = template.Must(template.New("fix.enum.conversion.go").Funcs(templateFuncs).Parse(`// Code generated by generate-pb. DO NOT EDIT.
// This file contains helper functions for converting between protobuf enums and FIX string values.

package {{extractPackageName .GoPackagePrefix}}

import "{{.QuickfixRoot}}/enum"

{{range getAllEnumDefinitions}}
{{.GenerateEnumStringMapping}}{{end}}
`))

// MessageConversionGoTemplate generates conversion functions from FIX messages to protobuf messages
var MessageConversionGoTemplate = template.Must(template.New("fix.message.conversion.go").Funcs(templateFuncs).Parse(`// Code generated by generate-pb. DO NOT EDIT.
// This file contains conversion functions from FIX messages to protobuf messages.

package {{extractPackageName .GoPackagePrefix}}

import (
	"fmt"

	"github.com/quickfixgo/quickfix"
	"google.golang.org/protobuf/proto"
	"xsyphon.com/bi/fix/api/fix/enum"
{{- range .Packages}}
	"{{.}}"
{{- end}}
)

var (
	Fix2PBMap = make(map[enum.MsgType]ConvertFunc)
)

type ConvertFunc func(*quickfix.Message) (proto.Message, error)

func init() {
{{- range .Messages}}
	Fix2PBMap[enum.MsgType_{{.EnumName}}] = func(message *quickfix.Message) (proto.Message, error) {
		return {{.Name}}FromFIX({{.PkgName}}.FromMessage(message))
	}
{{- end}}
}

{{range .Messages}}
// {{.Name}}FromFIX converts a FIX {{.Name}} message to protobuf {{.Name}}
func {{.Name}}FromFIX(fixMsg {{.FIXType}}) (*{{.Name}}, error) {
	pbMsg := &{{.Name}}{}
{{- range .GetFields}}
{{.ConvertCodes}}
{{- end}}
	return pbMsg, nil
}

{{end}}
`))
